version: "3.1" # optimal since v1.27.0, # Three mysql image services through Docker, using Docker Compose
services: 
  employee-db:
    container_name: employee-db
    image: mysql:latest
    restart: on-failure
    environment:
      - MYSQL_ROOT_PASSWORD=password 
      - MYSQL_DATABASE=employee
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports: 
      - "3306:3306"
    volumes:
       - .:/code
       - logvolume01:/var/log

    links:
     - redis
  redis: 
    image: redis
volumes:
  logvolume01: {}







#######
# For now there are 3 sepearate yml files because of issue with three in same file


#login-db:
    #container_name: login-db
    #image: mysql:latest
    #restart: on-failure
    #nvironment:
      #- MYSQL_ROOT_PASSWORD=password
      #- MYSQL_DATABASE=login
      #- MYSQL_USER=user
      #- MYSQL_PASSWORD=password
    #ports: 
      #- "3307:3307"
    #volumes:
       #- .:/code
       #- logvolume01:/var/log

    #links:
    # - redis
  #redis: 
   ##volumes:
  #logvolume01: {}





  #registration-db:
      #container_name: registration-db
      #image: mysql:latest
      #restart: on-failure
      #environment:
       #- MYSQL_ROOT_PASSWORD=password
       #- MYSQL_DATABASE=registration
       #- MYSQL_USER=user
       #- MYSQL_PASSWORD=password
      #ports:
       #- "3308:3308"
      #networks:
        #- "backend"
        
      #volumes:
      #- registration-db:/var/lib/mysql





#Experimental code
#services:
  #web:
    #build: .
    #ports:
      #- "3306:3306"
  #employee-db: 
    #image: mysql-latest

#networks:
  #default:
    # Use a custom driver
    #driver: custom-driver-1